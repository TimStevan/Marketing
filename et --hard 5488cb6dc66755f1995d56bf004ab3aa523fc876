[33mcommit 5488cb6dc66755f1995d56bf004ab3aa523fc876[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Abdallah M. Shnaino <abdallah.shnaino@gmail.com>
Date:   Thu Jan 27 09:49:57 2022 +0200

    the first version v--1

[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..8878ec1[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m<p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400"></a></p>[m
[32m+[m
[32m+[m[32m<p align="center">[m
[32m+[m[32m<a href="https://travis-ci.org/laravel/framework"><img src="https://travis-ci.org/laravel/framework.svg" alt="Build Status"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>[m
[32m+[m[32m</p>[m
[32m+[m
[32m+[m[32m## About Laravel[m
[32m+[m
[32m+[m[32mLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:[m
[32m+[m
[32m+[m[32m- [Simple, fast routing engine](https://laravel.com/docs/routing).[m
[32m+[m[32m- [Powerful dependency injection container](https://laravel.com/docs/container).[m
[32m+[m[32m- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.[m
[32m+[m[32m- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).[m
[32m+[m[32m- Database agnostic [schema migrations](https://laravel.com/docs/migrations).[m
[32m+[m[32m- [Robust background job processing](https://laravel.com/docs/queues).[m
[32m+[m[32m- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).[m
[32m+[m
[32m+[m[32mLaravel is accessible, powerful, and provides tools required for large, robust applications.[m
[32m+[m
[32m+[m[32m## Learning Laravel[m
[32m+[m
[32m+[m[32mLaravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.[m
[32m+[m
[32m+[m[32mIf you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.[m
[32m+[m
[32m+[m[32m## Laravel Sponsors[m
[32m+[m
[32m+[m[32mWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).[m
[32m+[m
[32m+[m[32m### Premium Partners[m
[32m+[m
[32m+[m[32m- **[Vehikl](https://vehikl.com/)**[m
[32m+[m[32m- **[Tighten Co.](https://tighten.co)**[m
[32m+[m[32m- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**[m
[32m+[m[32m- **[64 Robots](https://64robots.com)**[m
[32m+[m[32m- **[Cubet Techno Labs](https://cubettech.com)**[m
[32m+[m[32m- **[Cyber-Duck](https://cyber-duck.co.uk)**[m
[32m+[m[32m- **[Many](https://www.many.co.uk)**[m
[32m+[m[32m- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**[m
[32m+[m[32m- **[DevSquad](https://devsquad.com)**[m
[32m+[m[32m- **[Curotec](https://www.curotec.com/services/technologies/laravel/)**[m
[32m+[m[32m- **[OP.GG](https://op.gg)**[m
[32m+[m[32m- **[CMS Max](https://www.cmsmax.com/)**[m
[32m+[m[32m- **[WebReinvent](https://webreinvent.com/?utm_source=laravel&utm_medium=github&utm_campaign=patreon-sponsors)**[m
[32m+[m[32m- **[Lendio](https://lendio.com)**[m
[32m+[m[32m- **[Romega Software](https://romegasoftware.com)**[m
[32m+[m
[32m+[m[32m## Contributing[m
[32m+[m
[32m+[m[32mThank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).[m
[32m+[m
[32m+[m[32m## Code of Conduct[m
[32m+[m
[32m+[m[32mIn order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).[m
[32m+[m
[32m+[m[32m## Security Vulnerabilities[m
[32m+[m
[32m+[m[32mIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32mThe Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).[m
[1mdiff --git a/app/Console/Kernel.php b/app/Console/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d8bc1d2[m
[1m--- /dev/null[m
[1m+++ b/app/Console/Kernel.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Console;[m
[32m+[m
[32m+[m[32muse Illuminate\Console\Scheduling\Schedule;[m
[32m+[m[32muse Illuminate\Foundation\Console\Kernel as ConsoleKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends ConsoleKernel[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Define the application's command schedule.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function schedule(Schedule $schedule)[m
[32m+[m[32m    {[m
[32m+[m[32m        // $schedule->command('inspire')->hourly();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the commands for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function commands()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->load(__DIR__.'/Commands');[m
[32m+[m
[32m+[m[32m        require base_path('routes/console.php');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Exceptions/Handler.php b/app/Exceptions/Handler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8e7fbd1[m
[1m--- /dev/null[m
[1m+++ b/app/Exceptions/Handler.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Exceptions;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[m
[32m+[m[32muse Throwable;[m
[32m+[m
[32m+[m[32mclass Handler extends ExceptionHandler[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the exception types that are not reported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, class-string<Throwable>>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontReport = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the inputs that are never flashed for validation exceptions.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontFlash = [[m
[32m+[m[32m        'current_password',[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'password_confirmation',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the exception handling callbacks for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function register()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->reportable(function (Throwable $e) {[m
[32m+[m[32m            //[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Controller.php b/app/Http/Controllers/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a0a2a8a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Controller.php[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Auth\Access\AuthorizesRequests;[m
[32m+[m[32muse Illuminate\Foundation\Bus\DispatchesJobs;[m
[32m+[m[32muse Illuminate\Foundation\Validation\ValidatesRequests;[m
[32m+[m[32muse Illuminate\Routing\Controller as BaseController;[m
[32m+[m
[32m+[m[32mclass Controller extends BaseController[m
[32m+[m[32m{[m
[32m+[m[32m    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Kernel.php b/app/Http/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d3722c2[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Kernel.php[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Kernel as HttpKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends HttpKernel[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's global HTTP middleware stack.[m
[32m+[m[32m     *[m
[32m+[m[32m     * These middleware are run during every request to your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, class-string|string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $middleware = [[m
[32m+[m[32m        // \App\Http\Middleware\TrustHosts::class,[m
[32m+[m[32m        \App\Http\Middleware\TrustProxies::class,[m
[32m+[m[32m        \Fruitcake\Cors\HandleCors::class,[m
[32m+[m[32m        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,[m
[32m+[m[32m        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,[m
[32m+[m[32m        \App\Http\Middleware\TrimStrings::class,[m
[32m+[m[32m        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's route middleware groups.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<string, array<int, class-string|string>>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $middlewareGroups = [[m
[32m+[m[32m        'web' => [[m
[32m+[m[32m            \App\Http\Middleware\EncryptCookies::class,[m
[32m+[m[32m            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,[m
[32m+[m[32m            \Illuminate\Session\Middleware\StartSession::class,[m
[32m+[m[32m            // \Illuminate\Session\Middleware\AuthenticateSession::class,[m
[32m+[m[32m            \Illuminate\View\Middleware\ShareErrorsFromSession::class,[m
[32m+[m[32m            \App\Http\Middleware\VerifyCsrfToken::class,[m
[32m+[m[32m            \Illuminate\Routing\Middleware\SubstituteBindings::class,[m
[32m+[m[32m        ],[m
[32m+[m
[32m+[m[32m        'api' => [[m
[32m+[m[32m            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,[m
[32m+[m[32m            'throttle:api',[m
[32m+[m[32m            \Illuminate\Routing\Middleware\SubstituteBindings::class,[m
[32m+[m[32m        ],[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's route middleware.[m
[32m+[m[32m     *[m
[32m+[m[32m     * These middleware may be assigned to groups or used individually.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<string, class-string|string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $routeMiddleware = [[m
[32m+[m[32m        'auth' => \App\Http\Middleware\Authenticate::class,[m
[32m+[m[32m        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,[m
[32m+[m[32m        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,[m
[32m+[m[32m        'can' => \Illuminate\Auth\Middleware\Authorize::class,[m
[32m+[m[32m        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,[m
[32m+[m[32m        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,[m
[32m+[m[32m        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,[m
[32m+[m[32m        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,[m
[32m+[m[32m        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/Authenticate.php b/app/Http/Middleware/Authenticate.php[m
[1mnew file mode 100644[m
[1mindex 0000000..704089a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/Authenticate.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Auth\Middleware\Authenticate as Middleware;[m
[32m+[m
[32m+[m[32mclass Authenticate extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the path the user should be redirected to when they are not authenticated.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @return string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function redirectTo($request)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (! $request->expectsJson()) {[m
[32m+[m[32m            return route('login');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/EncryptCookies.php b/app/Http/Middleware/EncryptCookies.php[m
[1mnew file mode 100644[m
[1mindex 0000000..867695b[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/EncryptCookies.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Cookie\Middleware\EncryptCookies as Middleware;[m
[32m+[m
[32m+[m[32mclass EncryptCookies extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The names of the cookies that should not be encrypted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/PreventRequestsDuringMaintenance.php b/app/Http/Middleware/PreventRequestsDuringMaintenance.php[m
[1mnew file mode 100644[m
[1mindex 0000000..74cbd9a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/PreventRequestsDuringMaintenance.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;[m
[32m+[m
[32m+[m[32mclass PreventRequestsDuringMaintenance extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URIs that should be reachable while maintenance mode is enabled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/RedirectIfAuthenticated.php b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a2813a0[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Closure;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Facades\Auth;[m
[32m+[m
[32m+[m[32mclass RedirectIfAuthenticated[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Handle an incoming request.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next[m
[32m+[m[32m     * @param  string|null  ...$guards[m
[32m+[m[32m     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse[m
[32m+[m[32m     */[m
[32m+[m[32m    public function handle(Request $request, Closure $next, ...$guards)[m
[32m+[m[32m    {[m
[32m+[m[32m        $guards = empty($guards) ? [null] : $guards;[m
[32m+[m
[32m+[m[32m        foreach ($guards as $guard) {[m
[32m+[m[32m            if (Auth::guard($guard)->check()) {[m
[32m+[m[32m                return redirect(RouteServiceProvider::HOME);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $next($request);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrimStrings.php b/app/Http/Middleware/TrimStrings.php[m
[1mnew file mode 100644[m
[1mindex 0000000..88cadca[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrimStrings.php[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;[m
[32m+[m
[32m+[m[32mclass TrimStrings extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The names of the attributes that should not be trimmed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        'current_password',[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'password_confirmation',[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrustHosts.php b/app/Http/Middleware/TrustHosts.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7186414[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrustHosts.php[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Middleware\TrustHosts as Middleware;[m
[32m+[m
[32m+[m[32mclass TrustHosts extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the host patterns that should be trusted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array<int, string|null>[m
[32m+[m[32m     */[m
[32m+[m[32m    public function hosts()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            $this->allSubdomainsOfApplicationUrl(),[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrustProxies.php b/app/Http/Middleware/TrustProxies.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3391630[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrustProxies.php[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Middleware\TrustProxies as Middleware;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m
[32m+[m[32mclass TrustProxies extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The trusted proxies for this application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>|string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $proxies;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The headers that should be used to detect proxies.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var int[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $headers =[m
[32m+[m[32m        Request::HEADER_X_FORWARDED_FOR |[m
[32m+[m[32m        Request::HEADER_X_FORWARDED_HOST |[m
[32m+[m[32m        Request::HEADER_X_FORWARDED_PORT |[m
[32m+[m[32m        Request::HEADER_X_FORWARDED_PROTO |[m
[32m+[m[32m        Request::HEADER_X_FORWARDED_AWS_ELB;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/VerifyCsrfToken.php b/app/Http/Middleware/VerifyCsrfToken.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9e86521[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/VerifyCsrfToken.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;[m
[32m+[m
[32m+[m[32mclass VerifyCsrfToken extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URIs that should be excluded from CSRF verification.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/User.php b/app/Models/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8996368[m
[1m--- /dev/null[m
[1m+++ b/app/Models/User.php[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Contracts\Auth\MustVerifyEmail;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Factories\HasFactory;[m
[32m+[m[32muse Illuminate\Foundation\Auth\User as Authenticatable;[m
[32m+[m[32muse Illuminate\Notifications\Notifiable;[m
[32m+[m[32muse Laravel\Sanctum\HasApiTokens;[m
[32m+[m
[32m+[m[32mclass User extends Authenticatable[m
[32m+[m[32m{[m
[32m+[m[32m    use HasApiTokens, HasFactory, Notifiable;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The attributes that are mass assignable.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $fillable = [[m
[32m+[m[32m        'name',[m
[32m+[m[32m        'email',[m
[32m+[m[32m        'password',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The attributes that should be hidden for serialization.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<int, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $hidden = [[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'remember_token',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The attributes that should be cast.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<string, string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $casts = [[m
[32m+[m[32m        'email_verified_at' => 'datetime',[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/AppServiceProvider.php b/app/Providers/AppServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ee8ca5b[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/AppServiceProvider.php[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\ServiceProvider;[m
[32m+[m
[32m+[m[32mclass AppServiceProvider extends ServiceProvider[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register any application services.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function register()[m
[32m+[m[32m    {[m
[32m+[m[32m        //[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Bootstrap any application services.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function boot()[m
[32m+[m[32m    {[m
[32m+[m[32m        //[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/AuthServiceProvider.php b/app/Providers/AuthServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..22b77e6[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/AuthServiceProvider.php[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;[m
[32m+[m[32muse Illuminate\Support\Facades\Gate;[m
[32m+[m
[32m+[m[32mclass AuthServiceProvider extends ServiceProvider[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The policy mappings for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<class-string, class-string>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $policies = [[m
[32m+[m[32m        // 'App\Models\Model' => 'App\Policies\ModelPolicy',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register any authentication / authorization services.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function boot()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->registerPolicies();[m
[32m+[m
[32m+[m[32m        //[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/BroadcastServiceProvider.php b/app/Providers/BroadcastServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..395c518[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/BroadcastServiceProvider.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\Facades\Broadcast;[m
[32m+[m[32muse Illuminate\Support\ServiceProvider;[m
[32m+[m
[32m+[m[32mclass BroadcastServiceProvider extends ServiceProvider[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Bootstrap any application services.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function boot()[m
[32m+[m[32m    {[m
[32m+[m[32m        Broadcast::routes();[m
[32m+[m
[32m+[m[32m        require base_path('routes/channels.php');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/EventServiceProvider.php b/app/Providers/EventServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..23499eb[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/EventServiceProvider.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Auth\Events\Registered;[m
[32m+[m[32muse Illuminate\Auth\Listeners\SendEmailVerificationNotification;[m
[32m+[m[32muse Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;[m
[32m+[m[32muse Illuminate\Support\Facades\Event;[m
[32m+[m
[32m+[m[32mclass EventServiceProvider extends ServiceProvider[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The event listener mappings for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array<class-string, array<int, class-string>>[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $listen = [[m
[32m+[m[32m        Registered::class => [[m
[32m+[m[32m            SendEmailVerificationNotification::class,[m
[32m+[m[32m        ],[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register any events for your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function boot()[m
[32m+[m[32m    {[m
[32m+[m[32m        //[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/RouteServiceProvider.php b/app/Providers/RouteServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3bd3c81[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/RouteServiceProvider.php[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Cache\RateLimiting\Limit;[m
[32m+[m[32muse Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Facades\RateLimiter;[m
[32m+[m[32muse Illuminate\Support\Facades\Route;[m
[32m+[m
[32m+[m[32mclass RouteServiceProvider extends ServiceProvider[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The path to the "home" route for your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This is used by Laravel authentication to redirect users after login.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    public const HOME = '/home';[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The controller namespace for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When present, controller route declarations will automatically be prefixed with this namespace.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    // protected $namespace = 'App\\Http\\Controllers';[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Define your route model bindings, pattern filters, etc.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function boot()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->configureRateLimiting();[m
[32m+[m
[32m+[m[32m        $this->routes(function () {[m
[32m+[m[32m            Route::prefix('api')[m
[32m+[m[32m                ->middleware('api')[m
[32m+[m[32m                ->namespace($this->namespace)[m
[32m+[m[32m                ->group(base_path('routes/api.php'));[m
[32m+[m
[32m+[m[32m            Route::middleware('web')[m
[32m+[m[32m                ->namespace($this->namespace)[m
[32m+[m[32m                ->group(base_path('routes/web.php'));[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Configure the rate limiters for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function configureRateLimiting()[m
[32m+[m[32m    {[m
[32m+[m[32m        RateLimiter::for('api', function (Request $request) {[m
[32m+[m[32m            return Limit::perMinute(60)->by(optional($request->user())->id ?: $request->ip());[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/artisan b/artisan[m
[1mnew file mode 100755[m
[1mindex 0000000..67a3329[m
[1m--- /dev/null[m
[1m+++ b/artisan[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32m#!/usr/bin/env php[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mdefine('LARAVEL_START', microtime(true));[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Register The Auto Loader[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Composer provides a convenient, automatically generated class loader[m
[32m+[m[32m| for our application. We just need to utilize it! We'll require it[m
[32m+[m[32m| into the script here so that we do not have to worry about the[m
[32m+[m[32m| loading of any of our classes manually. It's great to relax.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mrequire __DIR__.'/vendor/autoload.php';[m
[32m+[m
[32m+[m[32m$app = require_once __DIR__.'/bootstrap/app.php';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Run The Artisan Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| When we run the console application, the current CLI command will be[m
[32m+[m[32m| executed in this console and the response sent back to a terminal[m
[32m+[m[32m| or another output device for the developers. Here goes nothing![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);[m
[32m+[m
[32m+[m[32m$status = $kernel->handle([m
[32m+[m[32m    $input = new Symfony\Component\Console\Input\ArgvInput,[m
[32m+[m[32m    new Symfony\Component\Console\Output\ConsoleOutput[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Shutdown The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Once Artisan has finished running, we will fire off the shutdown events[m
[32m+[m[32m| so that any final work may be done by the application before we shut[m
[32m+[m[32m| down the process. This is the last thing to happen to the request.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$kernel->terminate($input, $status);[m
[32m+[m
[32m+[m[32mexit($status);[m
[1mdiff --git a/bootstrap/app.php b/bootstrap/app.php[m
[1mnew file mode 100644[m
[1mindex 0000000..037e17d[m
[1m--- /dev/null[m
[1m+++ b/bootstrap/app.php[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Create The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| The first thing we will do is create a new Laravel application instance[m
[32m+[m[32m| which serves as the "glue" for all the components of Laravel, and is[m
[32m+[m[32m| the IoC container for the system binding all of the various parts.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$app = new Illuminate\Foundation\Application([m
[32m+[m[32m    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Bind Important Interfaces[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Next, we need to bind some important interfaces into the container so[m
[32m+[m[32m| we will be able to resolve them when needed. The kernels serve the[m
[32m+[m[32m| incoming requests to this application from both the web and CLI.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m[32m    Illuminate\Contracts\Http\Kernel::class,[m
[32m+[m[32m    App\Http\Kernel::class[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m[32m    Illuminate\Contracts\Console\Kernel::class,[m
[32m+[m[32m    App\Console\Kernel::class[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m[32m    Illuminate\Contracts\Debug\ExceptionHandler::class,[m
[32m+[m[32m    App\Exceptions\Handler::class[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Return The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This script returns the application instance. The instance is given to[m
[32m+[m[32m| the calling script so we can separate the building of the instances[m
[32m+[m[32m| from the actual running of the application and sending responses.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mreturn $app;[m
[1mdiff --git a/bootstrap/cache/.gitignore b/bootstrap/cache/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d6b7ef3[m
[1m--- /dev/null[m
[1m+++ b/bootstrap/cache/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m*[m
[32m+[m[32m!.gitignore[m
[1mdiff --git a/composer.json b/composer.json[m
[1mnew file mode 100644[m
[1mindex 0000000..2b0c115[m
[1m--- /dev/null[m
[1m+++ b/composer.json[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "name": "laravel/laravel",[m
[32m+[m[32m    "type": "project",[m
[32m+[m[32m    "description": "The Laravel Framework.",[m
[32m+[m[32m    "keywords": ["framework", "laravel"],[m
[32m+[m[32m    "license": "MIT",[m
[32m+[m[32m    "require": {[m
[32m+[m[32m        "php": "^7.3|^8.0",[m
[32m+[m[32m        "fruitcake/laravel-cors": "^2.0",[m
[32m+[m[32m        "guzzlehttp/guzzle": "^7.0.1",[m
[32m+[m[32m        "laravel/framework": "^8.75",[m
[32m+[m[32m        "laravel/sanctum": "^2.11",[m
[32m+[m[32m        "laravel/tinker": "^2.5"[m
[32m+[m[32m    },[m
[32m+[m[32m    "require-dev": {[m
[32m+[m[32m        "facade/ignition": "^2.5",[m
[32m+[m[32m        "fakerphp/faker": "^1.9.1",[m
[32m+[m[32m        "laravel/sail": "^1.0.1",[m
[32m+[m[32m        "mockery/mockery": "^1.4.4",[m
[32m+[m[32m        "nunomaduro/collision": "^5.10",[m
[32m+[m[32m        "phpunit/phpunit": "^9.5.10"[m
[32m+[m[32m    },[m
[32m+[m[32m    "autoload": {[m
[32m+[m[32m        "psr-4": {[m
[32m+[m[32m            "App\\": "app/",[m
[32m+[m[32m            "Database\\Factories\\": "database/factories/",[m
[32m+[m[32m            "Database\\Seeders\\": "database/seeders/"[m
[32m+[m[32m        }[m
[32m+[m[32m    },[m
[32m+[m[32m    "autoload-dev": {[m
[32m+[m[32m        "psr-4": {[m
[32m+[m[32m            "Tests\\": "tests/"[m
[32m+[m[32m        }[m
[32m+[m[32m    },[m
[32m+[m[32m    "scripts": {[m
[32m+[m[32m        "post-autoload-dump": [[m
[32m+[m[32m            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",[m
[32m+[m[32m            "@php artisan package:discover --ansi"[m
[32m+[m[32m        ],[m
[32m+[m[32m        "post-update-cmd": [[m
[32m+[m[32m            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"[m
[32m+[m[32m        ],[m
[32m+[m[32m        "post-root-package-install": [[m
[32m+[m[32m            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""[m
[32m+[m[32m        ],[m
[32m+[m[32m        "post-create-project-cmd": [[m
[32m+[m[32m            "@php artisan key:generate --ansi"[m
[32m+[m[32m        ][m
[32m+[m[32m    },[m
[32m+[m[32m    "extra": {[m
[32m+[m[32m        "laravel": {[m
[32m+[m[32m            "dont-discover": [][m
[32m+[m[32m        }[m
[32m+[m[32m    },[m
[32m+[m[32m    "config": {[m
[32m+[m[32m        "optimize-autoloader": true,[m
[32m+[m[32m        "preferred-install": "dist",[m
[32m+[m[32m        "sort-packages": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "minimum-stability": "dev",[m
[32m+[m[32m    "prefer-stable": true[m
[32m+[m[32m}[m
[1mdiff --git a/composer.lock b/composer.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..cc8bbfc[m
[1m--- /dev/null[m
[1m+++ b/composer.lock[m
[36m@@ -0,0 +1,7489 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "_readme": [[m
[32m+[m[32m        "This file locks the dependencies of your project to a known state",[m
[32m+[m[32m        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",[m
[32m+[m[32m        "This file is @generated automatically"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "content-hash": "c61ff82cbf0142a401a48a8161e1595a",[m
[32m+[m[32m    "packages": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "asm89/stack-cors",[m
[32m+[m[32m            "version": "v2.1.1",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/asm89/stack-cors.git",[m
[32m+[m[32m                "reference": "73e5b88775c64ccc0b84fb60836b30dc9d92ac4a"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/asm89/stack-cors/zipball/73e5b88775c64ccc0b84fb60836b30dc9d92ac4a",[m
[32m+[m[32m                "reference": "73e5b88775c64ccc0b84fb60836b30dc9d92ac4a",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^7.2|^8.0",[m
[32m+[m[32m                "symfony/http-foundation": "^4|^5|^6",[m
[32m+[m[32m                "symfony/http-kernel": "^4|^5|^6"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "^7|^9",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "^3.5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "2.1-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Asm89\\Stack\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Alexander",[m
[32m+[m[32m                    "email": "iam.asm89@gmail.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Cross-origin resource sharing library and stack middleware",[m
[32m+[m[32m            "homepage": "https://github.com/asm89/stack-cors",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "cors",[m
[32m+[m[32m                "stack"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2022-01-18T09:12:03+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "brick/math",[m
[32m+[m[32m            "version": "0.9.3",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/brick/math.git",[m
[32m+[m[32m                "reference": "ca57d18f028f84f777b2168cd1911b0dee2343ae"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/brick/math/zipball/ca57d18f028f84f777b2168cd1911b0dee2343ae",[m
[32m+[m[32m                "reference": "ca57d18f028f84f777b2168cd1911b0dee2343ae",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "ext-json": "*",[m
[32m+[m[32m                "php": "^7.1 || ^8.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "php-coveralls/php-coveralls": "^2.2",[m
[32m+[m[32m                "phpunit/phpunit": "^7.5.15 || ^8.5 || ^9.0",[m
[32m+[m[32m                "vimeo/psalm": "4.9.2"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Brick\\Math\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Arbitrary-precision arithmetic library",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "Arbitrary-precision",[m
[32m+[m[32m                "BigInteger",[m
[32m+[m[32m                "BigRational",[m
[32m+[m[32m                "arithmetic",[m
[32m+[m[32m                "bigdecimal",[m
[32m+[m[32m                "bignum",[m
[32m+[m[32m                "brick",[m
[32m+[m[32m                "math"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://github.com/BenMorel",[m
[32m+[m[32m                    "type": "github"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://tidelift.com/funding/github/packagist/brick/math",[m
[32m+[m[32m                    "type": "tidelift"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2021-08-15T20:50:18+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "dflydev/dot-access-data",[m
[32m+[m[32m            "version": "v3.0.1",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/dflydev/dflydev-dot-access-data.git",[m
[32m+[m[32m                "reference": "0992cc19268b259a39e86f296da5f0677841f42c"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/dflydev/dflydev-dot-access-data/zipball/0992cc19268b259a39e86f296da5f0677841f42c",[m
[32m+[m[32m                "reference": "0992cc19268b259a39e86f296da5f0677841f42c",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^7.1 || ^8.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpstan/phpstan": "^0.12.42",[m
[32m+[m[32m                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.3",[m
[32m+[m[32m                "scrutinizer/ocular": "1.6.0",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "^3.5",[m
[32m+[m[32m                "vimeo/psalm": "^3.14"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-main": "3.x-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Dflydev\\DotAccessData\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Dragonfly Development Inc.",[m
[32m+[m[32m                    "email": "info@dflydev.com",[m
[32m+[m[32m                    "homepage": "http://dflydev.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Beau Simensen",[m
[32m+[m[32m                    "email": "beau@dflydev.com",[m
[32m+[m[32m                    "homepage": "http://beausimensen.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Carlos Frutos",[m
[32m+[m[32m                    "email": "carlos@kiwing.it",[m
[32m+[m[32m                    "homepage": "https://github.com/cfrutos"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Colin O'Dell",[m
[32m+[m[32m                    "email": "colinodell@gmail.com",[m
[32m+[m[32m                    "homepage": "https://www.colinodell.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Given a deep data structure, access data by dot notation.",[m
[32m+[m[32m            "homepage": "https://github.com/dflydev/dflydev-dot-access-data",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "access",[m
[32m+[m[32m                "data",[m
[32m+[m[32m                "dot",[m
[32m+[m[32m                "notation"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2021-08-13T13:06:58+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "doctrine/inflector",[m
[32m+[m[32m            "version": "2.0.4",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/doctrine/inflector.git",[m
[32m+[m[32m                "reference": "8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/doctrine/inflector/zipball/8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89",[m
[32m+[m[32m                "reference": "8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^7.2 || ^8.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "doctrine/coding-standard": "^8.2",[m
[32m+[m[32m                "phpstan/phpstan": "^0.12",[m
[32m+[m[32m                "phpstan/phpstan-phpunit": "^0.12",[m
[32m+[m[32m                "phpstan/phpstan-strict-rules": "^0.12",[m
[32m+[m[32m                "phpunit/phpunit": "^7.0 || ^8.0 || ^9.0",[m
[32m+[m[32m                "vimeo/psalm": "^4.10"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Doctrine\\Inflector\\": "lib/Doctrine/Inflector"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Guilherme Blanco",[m
[32m+[m[32m                    "email": "guilhermeblanco@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Roman Borschel",[m
[32m+[m[32m                    "email": "roman@code-factory.org"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Benjamin Eberlei",[m
[32m+[m[32m                    "email": "kontakt@beberlei.de"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Jonathan Wage",[m
[32m+[m[32m                    "email": "jonwage@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Johannes Schmitt",[m
[32m+[m[32m                    "email": "schmittjoh@gmail.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.",[m
[32m+[m[32m            "homepage": "https://www.doctrine-project.org/projects/inflector.html",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "inflection",[m
[32m+[m[32m                "inflector",[m
[32m+[m[32m                "lowercase",[m
[32m+[m[32m                "manipulation",[m
[32m+[m[32m                "php",[m
[32m+[m[32m                "plural",[m
[32m+[m[32m                "singular",[m
[32m+[m[32m                "strings",[m
[32m+[m[32m                "uppercase",[m
[32m+[m[32m                "words"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://www.doctrine-project.org/sponsorship.html",[m
[32m+[m[32m                    "type": "custom"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://www.patreon.com/phpdoctrine",[m
[32m+[m[32m                    "type": "patreon"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finflector",[m
[32m+[m[32m                    "type": "tidelift"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2021-10-22T20:16:43+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "doctrine/lexer",[m
[32m+[m[32m            "version": "1.2.2",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/doctrine/lexer.git",[m
[32m+[m[32m                "reference": "9c50f840f257bbb941e6f4a0e94ccf5db5c3f76c"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/doctrine/lexer/zipball/9c50f840f257bbb941e6f4a0e94ccf5db5c3f76c",[m
[32m+[m[32m                "reference": "9c50f840f257bbb941e6f4a0e94ccf5db5c3f76c",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^7.1 || ^8.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "doctrine/coding-standard": "^9.0",[m
[32m+[m[32m                "phpstan/phpstan": "1.3",[m
[32m+[m[32m                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",[m
[32m+[m[32m                "vimeo/psalm": "^4.11"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Doctrine\\Common\\Lexer\\": "lib/Doctrine/Common/Lexer"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Guilherme Blanco",[m
[32m+[m[32m                    "email": "guilhermeblanco@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Roman Borschel",[m
[32m+[m[32m                    "email": "roman@code-factory.org"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Johannes Schmitt",[m
[32m+[m[32m                    "email": "schmittjoh@gmail.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.",[m
[32m+[m[32m            "homepage": "https://www.doctrine-project.org/projects/lexer.html",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "annotations",[m
[32m+[m[32m                "docblock",[m
[32m+[m[32m                "lexer",[m
[32m+[m[32m                "parser",[m
[32m+[m[32m                "php"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://www.doctrine-project.org/sponsorship.html",[m
[32m+[m[32m                    "type": "custom"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://www.patreon.com/phpdoctrine",[m
[32m+[m[32m                    "type": "patreon"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Flexer",[m
[32m+[m[32m                    "type": "tidelift"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2022-01-12T08:27:12+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "dragonmantank/cron-expression",[m
[32m+[m[32m            "version": "v3.3.1",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/dragonmantank/cron-expression.git",[m
[32m+[m[32m                "reference": "be85b3f05b46c39bbc0d95f6c071ddff669510fa"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/dragonmantank/cron-expression/zipball/be85b3f05b46c39bbc0d95f6c071ddff669510fa",[m
[32m+[m[32m                "reference": "be85b3f05b46c39bbc0d95f6c071ddff669510fa",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^7.2|^8.0",[m
[32m+[m[32m                "webmozart/assert": "^1.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "replace": {[m
[32m+[m[32m                "mtdowling/cron-expression": "^1.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpstan/extension-installer": "^1.0",[m
[32m+[m[32m                "phpstan/phpstan": "^1.0",[m
[32m+[m[32m                "phpstan/phpstan-webmozart-assert": "^1.0",[m
[32m+[m[32m                "phpunit/phpunit": "^7.0|^8.0|^9.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Cron\\": "src/Cron/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Chris Tankersley",[m
[32m+[m[32m                    "email": "chris@ctankersley.com",[m
[32m+[m[32m                    "homepage": "https://github.com/dragonmantank"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "CRON for PHP: Calculate the next or previous run date and determine if a CRON expression is due",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "cron",[m
[32m+[m[32m                "schedule"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://github.com/dragonmantank",[m
[32m+[m[32m                    "type": "github"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2022-01-18T15:43:28+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "egulias/email-validator",[m
[32m+[m[32m            "version": "2.1.25",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/egulias/EmailValidator.git",[m
[32m+[m[32m                "reference": "0dbf5d78455d4d6a41d186da50adc1122ec066f4"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/0dbf5d78455d4d6a41d186da50adc1122ec066f4",[m
[32m+[m[32m                "reference": "0dbf5d78455d4d6a41d186da50adc1122ec066f4",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "doctrine/lexer": "^1.0.1",[m
[32m+[m[32m                "php": ">=5.5",[m
[32m+[m[32m                "symfony/polyfill-intl-idn": "^1.10"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "dominicsayers/isemail": "^3.0.7",[m
[32m+[m[32m                "phpunit/phpunit": "^4.8.36|^7.5.15",[m
[32m+[m[32m                "satooshi/php-coveralls": "^1.0.1"[m
[32m+[m[32m            },[m
[32m+[m[32m            "suggest": {[m
[32m+[m[32m                "ext-intl": "PHP Internationalization Libraries are required to use the SpoofChecking validation"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "2.1.x-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Egulias\\EmailValidator\\": "src"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Eduardo Gulias Davis"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "A library for validating emails against several RFCs",[m
[32m+[m[32m            "homepage": "https://github.com/egulias/EmailValidator",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "email",[m
[32m+[m[32m                "emailvalidation",[m
[32m+[m[32m                "emailvalidator",[m
[32m+[m[32m                "validation",[m
[32m+[m[32m                "validator"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://github.com/egulias",[m
[32m+[m[32m                    "type": "github"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2020-12-29T14:50:06+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "fruitcake/laravel-cors",[m
[32m+[m[32m            "version": "v2.0.5",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/fruitcake/laravel-cors.git",[m
[32m+[m[32m                "reference": "3a066e5cac32e2d1cdaacd6b961692778f37b5fc"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/fruitcake/laravel-cors/zipball/3a066e5cac32e2d1cdaacd6b961692778f37b5fc",[m
[32m+[m[32m                "reference": "3a066e5cac32e2d1cdaacd6b961692778f37b5fc",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "asm89/stack-cors": "^2.0.1",[m
[32m+[m[32m                "illuminate/contracts": "^6|^7|^8|^9",[m
[32m+[m[32m                "illuminate/support": "^6|^7|^8|^9",[m
[32m+[m[32m                "php": ">=7.2",[m
[32m+[m[32m                "symfony/http-foundation": "^4|^5|^6",[m
[32m+[m[32m                "symfony/http-kernel": "^4.3.4|^5|^6"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "laravel/framework": "^6|^7.24|^8",[m
[32m+[m[32m                "orchestra/testbench-dusk": "^4|^5|^6|^7",[m
[32m+[m[32m                "phpunit/phpunit": "^6|^7|^8|^9",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "^3.5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "2.0-dev"[m
[32m+[m[32m                },[m
[32m+[m[32m                "laravel": {[m
[32m+[m[32m                    "providers": [[m
[32m+[m[32m                        "Fruitcake\\Cors\\CorsServiceProvider"[m
[32m+[m[32m                    ][m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Fruitcake\\Cors\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Fruitcake",[m
[32m+[m[32m                    "homepage": "https://fruitcake.nl"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Barry vd. Heuvel",[m
[32m+[m[32m                    "email": "barryvdh@gmail.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Adds CORS (Cross-Origin Resource Sharing) headers support in your Laravel application",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "api",[m
[32m+[m[32m                "cors",[m
[32m+[m[32m                "crossdomain",[m
[32m+[m[32m                "laravel"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://fruitcake.nl",[m
[32m+[m[32m                    "type": "custom"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://github.com/barryvdh",[m
[32m+[m[32m                    "type": "github"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2022-01-03T14:53:04+00:00"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "graham-campbell/result-type",[m
[32m+[m[32m            "version": "v1.0.4",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/GrahamCampbell/Result-Type.git",[m
[32m+[m[32m                "reference": "0690bde05318336c7221785f2a932467f98b64ca"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/0690bde05318336c7221785f2a932467f98b64ca",[m
[32m+[m[32m                "reference": "0690bde05318336c7221785f2a9324